name: Test, Build, Rollout CI/CD
on:
  push:
    branches:
      - production
      - staging
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - name: Install dependencies
        run: npm install

      - name: Run tests if present
        run: npm run real-test --if-present # using "real-test" instead of "test" because command "npm run test" hangs indefinitely

  build:
    needs: test
    runs-on: ubuntu-22.04
    continue-on-error: false
    # if: ${{ github.event_name == 'push' && contains( github.event.head_commit.message, 'deploy') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Declare Variables
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"; echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: youscale
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pass Version ENV to Dockerfile
        shell: bash
        run: echo "" >> Dockerfile && echo ENV GIT_VERSION=${{ steps.vars.outputs.sha_short }} GIT_BRANCH=${{ steps.vars.outputs.branch }} >> ./Dockerfile
      - name: Build and Publish
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: youscale/server:${{ steps.vars.outputs.sha_short }},youscale/server:${{ steps.vars.outputs.branch }}-latest

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    continue-on-error: false
    # if: ${{ github.event_name == 'push' && contains( github.event.head_commit.message, 'deploy') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Declare Variables
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"; echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      - name: Rollout Deployment Version
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: -n ${{ steps.vars.outputs.branch }} set image deployment/server server=youscale/server:${{ steps.vars.outputs.sha_short }}
